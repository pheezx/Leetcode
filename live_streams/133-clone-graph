var cloneGraph = function (node) {
  if (!node) return node;
  const copy = new Map();
  let queue = [node];
  let visited = new Set();
  while (queue.length > 0) {
    const n = queue.shift();
    visited.add(n);
    copy.set(n, new Node(n.val, n.neighbors));
    for (let i = 0; i < n.neighbors.length; i++) {
      if (!visited.has(n.neighbors[i])) {
        queue.push(n.neighbors[i]);
      }
    }
  }
  visited = new Set();
  queue = [copy.get(node)];
  while (queue.length > 0) {
    const n = queue.shift();
    if (visited.has(n)) continue;
    visited.add(n);
    n.neighbors = n.neighbors.map((neighbor) => copy.get(neighbor));
    for (let i = 0; i < n.neighbors.length; i++) {
      if (!visited.has(n.neighbors[i])) {
        queue.push(n.neighbors[i]);
      }
    }
  }
  return copy.get(node);
};
